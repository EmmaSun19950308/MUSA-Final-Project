data_f <- data_f %>%
mutate(occ_num = as.numeric(case_when(
data_f$occupancy == "high" ~ 3,
data_f$occupancy == "medium" ~ 2,
data_f$occupancy == "low" ~ 1,
)))
data_f <- data_f_00 %>%
st_drop_geometry() %>%
left_join(stations_final, by = c('from' = "station_name")) %>%
st_sf()
data_f <- data_f_00 %>%
left_join(stations_final, by = c('from' = "station_name"))
data_f <- data_f_00 %>%
left_join(stations_final, by = c('from' = "station_name"))
data_t <- data_t_00 %>%
left_join(stations_final, by = c('from' = "station_name"))
data_f <- data_f %>%
mutate(occ_num = as.numeric(case_when(
data_f$occupancy == "high" ~ 3,
data_f$occupancy == "medium" ~ 2,
data_f$occupancy == "low" ~ 1,
)))
data_f <-
data_f %>%
arrange(from, interval60) %>%
mutate(lagHour = dplyr::lag(occ_num,1),
lag2Hours = dplyr::lag(occ_num,2),
lag3Hours = dplyr::lag(occ_num,3),
lag4Hours = dplyr::lag(occ_num,4),
lag12Hours = dplyr::lag(occ_num,12)) %>%
mutate(time_of_day = case_when(hour(interval60) < 7 | hour(interval60) > 18 ~ "Overnight",
hour(interval60) >= 7 & hour(interval60) < 10 ~ "AM Rush",
hour(interval60) >= 10 & hour(interval60) < 15 ~ "Mid-Day",
hour(interval60) >= 15 & hour(interval60) <= 18 ~ "PM Rush"))
data_t <- data_t %>%
mutate(occ_num = as.numeric(case_when(
data_t$occupancy == "high" ~ 3,
data_t$occupancy == "medium" ~ 2,
data_t$occupancy == "low" ~ 1,
)))
data_t <-
data_t %>%
arrange(to, interval60) %>%
mutate(lagHour = dplyr::lag(occ_num,1),
lag2Hours = dplyr::lag(occ_num,2),
lag3Hours = dplyr::lag(occ_num,3),
lag4Hours = dplyr::lag(occ_num,4),
lag12Hours = dplyr::lag(occ_num,12)) %>%
mutate(time_of_day = case_when(hour(interval60) < 7 | hour(interval60) > 18 ~ "Overnight",
hour(interval60) >= 7 & hour(interval60) < 10 ~ "AM Rush",
hour(interval60) >= 10 & hour(interval60) < 15 ~ "Mid-Day",
hour(interval60) >= 15 & hour(interval60) <= 18 ~ "PM Rush"))
## III. Exploratory Data Analysis
### 3.1 Stations Characteristics
#### 3.1.1 Facility Characteristics
```{r Facility, echo=TRUE, message=FALSE, warning=FALSE}
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = facility_sum) ,size = 0.5)+
labs(title="Facility Counts across Stations",
subtitle = 'Departure Station\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
mapTheme()+
plotTheme()
ggplot(data = stations_final %>% filter(stationdist < 20000),
aes(x = stationdist, group = occupancy, fill=occupancy)) + geom_density(alpha = .4) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
labs(title="Station Density by Occupancy Level",
subtitle = 'Belgium, 2016\n',
caption = "Figure",
x="Distance",
y="Density")+
plotTheme()
ggplot(data = stations_final %>% filter(stationsdist < 20000),
aes(x = stationsdist, group = occupancy, fill = occupancy)) + geom_density(alpha = .4) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
labs(title="Station Density by Occupancy Level",
subtitle = 'Belgium, 2016\n',
caption = "Figure",
x="Distance",
y="Density")+
plotTheme()
ggplot(data = stations_final %>% filter(stationsdist < 20000),
aes(x = stationsdist, group = occupancy, fill = occupancy)) + geom_density(alpha = .4)
stations_final %>% filter(stationsdist < 20000) %>%
ggplot(aes(x = stationsdist, group = occupancy, fill = occupancy)) + geom_density(alpha = .4) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
labs(title="Station Density by Occupancy Level",
subtitle = 'Belgium, 2016\n',
caption = "Figure",
x="Distance",
y="Density")+
plotTheme()
View(stations_final)
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = stationsdist) ,size = 0.5)+
labs(title="Facility Counts across Stations",
subtitle = 'Departure Station\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = stationsdist) ,size = 0.5)+
labs(title="Facility Counts across Stations",
subtitle = 'Departure Station\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3)
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = stationsdist) ,size = 0.5)+
labs(title="Facility Counts across Stations",
subtitle = 'Departure Station\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3) +
mapTheme()+
plotTheme()  +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = stationsdist) ,size = 0.5)+
labs(title="Station Density by Occupancy Level",
subtitle = 'Distance of each station to the nearest three stations\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3) +
mapTheme()+
plotTheme()  +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = majc_nn5) ,size = 0.5)+
labs(title="Distance of Stations to Major Cities",
subtitle = '\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3) +
mapTheme()+
plotTheme()  +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = majc_nn5) ,size = 0.5)+
labs(title="Distance of Stations to Major Cities",
subtitle = '\n',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3) +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = F_H_com) ,size = 0.5)+
labs(title="High Occupancy Level Proportion of Each Station",
subtitle = ' ',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
facet_wrap(~occupancy, ncol = 3) +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = F_H_com) ,size = 0.5)+
labs(title="High Occupancy Level Proportion of Each Station",
subtitle = ' ',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Counts')+
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = F_H_com) ,size = 0.5)+
labs(title="High Occupancy Level Proportion of Each Station",
subtitle = ' ',
caption = 'Figure')+
scale_colour_viridis(direction = -1,
discrete = FALSE, option = "plasma",
name = 'Ratio')+
mapTheme()+
plotTheme()
pred_table <- function(data,model,Hplus,Lplus){
attach(data)
f_occ <- ordered(occupancy,levels=c("low","medium","high") )
detach(data)
f_pred <- predict(model,type="probs",newdata = data) %>%
as.data.frame() %>%
mutate(predClass = case_when(
low+Lplus>high+Hplus&low+Lplus>medium ~ "low",
high+Hplus>low+Lplus&high+Hplus>medium ~ "high",
TRUE ~ "medium"
))
mlt.class <- ordered(f_pred$predClass,levels=c("low","medium","high") )
return(table(mlt.class,f_occ))
}
#for calc sensitivity and specificity
pred_table1 <- function(data,model,Hplus,Lplus){
f_pred <- predict(model,type="probs",newdata = data) %>%
as.data.frame() %>%
mutate(predClass = case_when(
low+Lplus>high+Hplus&low+Lplus>medium ~ "low",
high+Hplus>low+Lplus&high+Hplus>medium ~ "high",
TRUE ~ "medium"
))
return(table(f_pred$predClass,data$occupancy))
}
#distance from ROC_occ point to coin flip line
Distance <- function(Hp,Lp,occ,pred,trn_occ){
pred <- as.data.frame(pred) %>%
mutate(predClass = case_when(
low+Lp>high+Hp&low+Lp>medium ~ "low",
high+Hp>low+Lp&high+Hp>medium ~ "high",
TRUE ~ "medium"
))
#make sure we can get 3*3 table
pred_occ <- ordered(c(pred[,4],"low","medium","high"),levels=c("low","medium","high") )
trn_occ <- ordered(trn_occ,levels=c("low","medium","high") )
true_occ <- c(trn_occ,1,2,3)
table <- table(pred_occ,true_occ)
# true_occ_fraction
TFrc <- table[occ,occ]/sum(table[,occ])
#flase_occ_fraction
x <- c(3,1,2,3,1)
FFrc <- (table[occ,x[occ]]+table[occ,x[occ+2]])/(sum(table[,x[occ]])+sum(table[,x[occ+2]]))
distance <- abs(TFrc-FFrc)/(2^0.5)
return(distance)
}
ROC.f <- function(data,model){
attach(data)
f_occ <- occupancy
detach(data)
f_pred <- predict(model,type="probs",newdata = data)
f_ROC <- data.frame(Hplus=rep(0,400),Lplus=rep(0,400),D_H=rep(0,400),D_M=rep(0,400),D_L=rep(0,400),D_T=rep(0,400))
for(i in seq(1:20)){
for(p in seq(1:20)){
f_ROC[(i-1)*20+p,1] <- i*0.02-0.2
f_ROC[(i-1)*20+p,2] <- p*0.02-0.2
f_ROC[(i-1)*20+p,3] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],1,f_pred,f_occ)
f_ROC[(i-1)*20+p,5] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],2,f_pred,f_occ)
f_ROC[(i-1)*20+p,4] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],3,f_pred,f_occ)
}
}
for(i in seq(1:20)){
for(p in seq(1:20)){
f_ROC[(i-1)*20+p,6] <- f_ROC[(i-1)*20+p,3]+f_ROC[(i-1)*20+p,4]+f_ROC[(i-1)*20+p,5]
}
}
return(f_ROC)
}
### Define pseudo AUC
mean_AUC <- function(data,model){
f_ROC <- ROC.f(data,model)
f_auc <- data.frame(Total_auc.mean=c(mean(f_ROC[,6])),High_auc.mean=c(mean(f_ROC[,3])),Med_auc.mean=c(mean(f_ROC[,4])),Low_auc.mean=c(mean(f_ROC[,5])))
return(f_auc)
}
###  display accuracy, specificity, and sensitivity.
sensspec <- function(data,model,Hplus,Lplus){
table = pred_table1(data,model,Hplus,Lplus)
accuracy = (table["high", "high"] +table["medium", "medium"] + table["low", "low"])/sum(table)
sens_high = sensitivity(pred_table1(data,model,Hplus,Lplus),"high")
sens_med = sensitivity(pred_table1(data,model,Hplus,Lplus),"medium")
sens_low = sensitivity(pred_table1(data,model,Hplus,Lplus),"low")
spec_high = specificity(pred_table1(data,model,Hplus,Lplus),"high")
spec_med = specificity(pred_table1(data,model,Hplus,Lplus),"medium")
spec_low = specificity(pred_table1(data,model,Hplus,Lplus),"low")
sens_spec <- list(accuracy, sens_high, sens_med, sens_low, spec_high, spec_med, spec_low)
return(sens_spec)
}
mlt <- multinom(occupancy~from + distance + to +day + week, data=data_f_reg,MaxNWts =10000000)
mlt <- multinom(occupancy~from + distance + to +day + week, data=data_f_reg,MaxNWts =10000000)
pred_table(data_f_reg,mlt,0,0)
pred_table(data_f_reg,mlt,0,0)
testProbs2 <- data.frame(Outcome2 = as.factor(data_f_reg$occupancy),
Probs2 = predict(mlt, newdata = data_f_reg, na.rm = TRUE, type= "response" ))
pred_table1(trn_hjz,mlt,0,0)
pred_table1(data_f,mlt,0,0)
pred_table1(data_f_reg,mlt,0,0)
pred_table(data_f_reg,mlt,0,0)
pred_table1(data_f_reg,m1,0,0)
m2 <- multinom(occupancy ~ from + to + avg_stop_times + facility_sum + temperature + humidity + windspeed + visibility + F_H_com + F_M_com + F_L_com + T_H_com + T_M_com + T_L_com + connections + week + day + hour + min + vehicle_type , data=data_f_reg,MaxNWts =10000000)
pred_table1(data_f_reg, m2, 0 ,0)
sensspec(data_f_reg, m2, 0 ,0)
set.seed(3456)
trainIndex <- createDataPartition(data_f_reg$occupancy, p = .65,
list = FALSE,
times = 1)
data_f_regTrain <- data_f_reg[ trainIndex,]
data_f_regTest  <- data_f_reg[-trainIndex,]
m0 <- polr(as.factor(occupancy) ~ avg_stop_times + facility_sum + temperature + humidity + windspeed + visibility + F_H_com + F_M_com + F_L_com + T_H_com + T_M_com + T_L_com + connections + week + day + hour + min + vehicle_type ,
data = data_f_regTrain, Hess=TRUE)
m1 <- multinom(occupancy ~ from + to + avg_stop_times + facility_sum + temperature + humidity + windspeed + visibility + F_H_com + F_M_com + F_L_com + T_H_com + T_M_com + T_L_com + connections + week + day + hour + min + vehicle_type , data=data_f_regTrain,MaxNWts =10000000)
pred_table1(data_f_regTest, m0, 0 ,0)
pred_table1(data_f_regTest, m1, 0 ,0)
m0
m1
mlt <- multinom(occupancy ~ from + to + avg_stop_times , data=data_f_reg,MaxNWts =10000000)
polr <- polr(as.factor(occupancy) ~ from + to + avg_stop_times ,
data = data_f_reg, Hess=TRUE)
mlt
mlt <- multinom(occupancy ~ avg_stop_times + facility_num , data=data_f_reg,MaxNWts =10000000)
mlt <- multinom(occupancy ~ avg_stop_times + facility_sum , data=data_f_reg,MaxNWts =10000000)
polr <- polr(as.factor(occupancy) ~ avg_stop_times +facility_sum ,
data = data_f_reg, Hess=TRUE)
mlt
polr
gganimate::animate(p1,  duration=10,renderer = gifski_renderer())
test04 <- data %>%
group_by(vehicle) %>%
summarise(n = n()) %>%
filter(n >= 12)
freq_v = c("IC1518","IC429","IC1515","IC407","P7305","IC1807","IC3631","1828","8015","IC1831","IC539","P7444","S83978", "IC1507","IC716","L557","S23665","IC3432","IC4317","S53586")
p1 <- ggplot() +
geom_sf(data = rail, aes(color = "grey")) +
geom_sf(data=subset(data_f, data_f$vehicle %in% freq_v),aes(colour = vehicle),size=2,show.legend = "point")+
labs(title="Top 20 Busiest Lines",
subtitle = 'Departure Stations\n',
caption = "Figure")+
mapTheme()+
plotTheme() +
theme(legend.position = "bottom") +
transition_manual(factor(vehicle, levels = freq_v), cumulative = TRUE)
## occupancy by lines: destination
p2 <- ggplot()+
geom_sf(data=rail,aes(color = "grey"))+
geom_sf(data=subset(data_t, data_t$vehicle %in% freq_v),aes(colour = vehicle),size=2,show.legend = "point")+
labs(title="Top 20 Frequent Lines Plotted to Destination\n",
caption = 'Figure')+
mapTheme()+
plotTheme() +
theme(legend.position = "bottom") +
transition_manual(factor(vehicle, levels = freq_v), cumulative = TRUE)
gganimate::animate(p1,  duration=10,renderer = gifski_renderer())
gganimate::animate(p1,  duration=10,renderer = gifski_renderer())
gganimate::animate(p2,  duration=10,renderer = gifski_renderer())
gganimate::animate(p1,  duration=10,renderer = gifski_renderer())
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Departure Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day,nrow =4) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day,nrow =4) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Departure Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Departure Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Departure Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_f %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Departure Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
ggplot() +
geom_sf(data = rail, color = "grey") +
geom_sf(data = data_t %>%
filter(country.code == 'be'),
aes(color = occupancy) ,size = 0.5)+
labs(title="Occupancy Level across Destination Station by Week Days\n",
caption = 'Figure')+
facet_wrap(~day) +
scale_colour_manual(values = palette3,
name = 'Occupancy') +
mapTheme()+
plotTheme()
