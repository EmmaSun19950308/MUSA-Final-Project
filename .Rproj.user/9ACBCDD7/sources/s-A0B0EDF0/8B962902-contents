## V. Model Evaluation and Validation

### 5.1 Model Evaluation 

```{r}
f_occ <- ordered(data_f_reg$occupancy,levels=c("low","medium","high") )
f_pred0 <- predict(m0,type="probs",newdata = data_f_reg) %>% 
    as.data.frame() %>% 
    mutate(predClass = case_when(
    low+0>high+0 &low+0>medium ~ "low",
    high+0>low+0&high+0>medium ~ "high",
    TRUE ~ "medium"
  ))

mlt.class0 <- ordered(f_pred0$predClass,levels=c("low","medium","high") )
conf.matrix0 <- table(mlt.class0,f_occ)
conf.matrix0

f_pred1 <- predict(m1,type="probs",newdata = data_f_reg) %>% 
    as.data.frame() %>% 
    mutate(predClass = case_when(
    low+0>high+0 &low+0>medium ~ "low",
    high+0>low+0&high+0>medium ~ "high",
    TRUE ~ "medium"
  ))

mlt.class1 <- ordered(f_pred1$predClass,levels=c("low","medium","high") )
conf.matrix1 <- table(mlt.class1,f_occ)

conf.matrix0
conf.matrix1
```

```{r}
pred_occ <- ordered(f_pred0[,4],levels=c("low","medium","high") )
  true_occ <- ordered(data_f_reg$occupancy,levels=c("low","medium","high") )
  true_occ <- c(trn_occ,1,2,3)
  table <- table(pred_occ,true_occ)
  table
```


```{r function prep, message=FALSE, warning=FALSE, include=FALSE}

#for calc sensitivity and specificity
pred_table1 <- function(data,model,Hplus,Lplus){
  f_pred <- predict(model,type="probs",newdata = data) %>% 
    as.data.frame() %>% 
    mutate(predClass = case_when(
    low+Lplus>high+Hplus&low+Lplus>medium ~ "low",
    high+Hplus>low+Lplus&high+Hplus>medium ~ "high",
    TRUE ~ "medium"
  ))
return(table(f_pred$predClass,data$occupancy))
}


#distance from ROC_occ point to coin flip line
Distance <- function(Hp,Lp,occ,pred,trn_occ){
  pred <- as.data.frame(pred) %>% 
  mutate(predClass = case_when(
    low+Lp>high+Hp&low+Lp>medium ~ "low",
    high+Hp>low+Lp&high+Hp>medium ~ "high",
    TRUE ~ "medium"
  ))
  #make sure we can get 3*3 table
  pred_occ <- ordered(pred[,4],levels=c("low","medium","high") )
  true_occ <- ordered(trn_occ,levels=c("low","medium","high") )
  table <- table(pred_occ,true_occ)
  # true_occ_fraction
  TFrc <- table[occ,occ]/sum(table[,occ])
  #false_occ_fraction
  x <- c(3,1,2,3,1)
  FFrc <- (table[occ,x[occ]]+table[occ,x[occ+2]])/(sum(table[,x[occ]])+sum(table[,x[occ+2]]))
  distance <- abs(TFrc-FFrc)/(2^0.5)
  return(distance)
}

ROC.f <- function(data,model){
    attach(data)
  f_occ <- occupancy
  detach(data)
  
  f_pred <- predict(model,type="probs",newdata = data)
 
    f_ROC <- data.frame(Hplus=rep(0,400),Lplus=rep(0,400),D_H=rep(0,400),D_M=rep(0,400),D_L=rep(0,400),D_T=rep(0,400))
  
  for(i in seq(1:20)){
    for(p in seq(1:20)){
      f_ROC[(i-1)*20+p,1] <- i*0.02-0.2
      f_ROC[(i-1)*20+p,2] <- p*0.02-0.2
      f_ROC[(i-1)*20+p,3] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],1,f_pred0,f_occ)
      f_ROC[(i-1)*20+p,5] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],2,f_pred0,f_occ)
      f_ROC[(i-1)*20+p,4] <- Distance(f_ROC[(i-1)*20+p,1],f_ROC[(i-1)*20+p,2],3,f_pred0,f_occ)
    }
  }
  

  for(i in seq(1:20)){
    for(p in seq(1:20)){
      f_ROC[(i-1)*20+p,6] <- f_ROC[(i-1)*20+p,3]+f_ROC[(i-1)*20+p,4]+f_ROC[(i-1)*20+p,5]
    }
  }
  return(f_ROC)
}


### Define pseudo AUC
mean_AUC <- function(data,model){

  f_ROC <- ROC.f(data,model)

  f_auc <- data.frame(Total_auc.mean=c(mean(f_ROC[,6])),High_auc.mean=c(mean(f_ROC[,3])),Med_auc.mean=c(mean(f_ROC[,4])),Low_auc.mean=c(mean(f_ROC[,5])))

  return(f_auc)
}


###  display accuracy, specificity, and sensitivity.
sensspec <- function(data,model,Hplus,Lplus){
  table = pred_table1(data,model,Hplus,Lplus)
  
  accuracy = (table["high", "high"] +table["medium", "medium"] + table["low", "low"])/sum(table)
  
  sens_high = sensitivity(pred_table1(data,model,Hplus,Lplus),"high")
  sens_med = sensitivity(pred_table1(data,model,Hplus,Lplus),"medium")
  sens_low = sensitivity(pred_table1(data,model,Hplus,Lplus),"low")
  
  spec_high = specificity(pred_table1(data,model,Hplus,Lplus),"high")
  spec_med = specificity(pred_table1(data,model,Hplus,Lplus),"medium")
  spec_low = specificity(pred_table1(data,model,Hplus,Lplus),"low")
  
  sens_spec <- list(accuracy, sens_high, sens_med, sens_low, spec_high, spec_med, spec_low)
  return(sens_spec)
}
```

```{r Model evaluation , echo=TRUE, message=FALSE, warning=FALSE, paged.print=FALSE}

sensspec(na.omit(data_f_reg), m0, 0 ,0)
sensspec(na.omit(data_f_reg), m1, 0 ,0)

f_occ <- data_f_reg$occupancy
length(f_occ)

f_pred <- predict(m1,type="probs",newdata = data_f_reg)
length(f_pred)
View(f_pred)
View(f_occ)
```